---
import BaseLayout from '../layouts/BaseLayout.astro';
---
<BaseLayout title="ログイン">
    <div class="login-container" style="max-width: 400px; margin: 5rem auto;">
        <h1 class="text-3xl font-bold text-center">ログイン</h1>
        <form id="login-form" class="mt-8 space-y-6">
            <div>
                <label for="email" class="form-label">メールアドレス</label>
                <input id="email" name="email" type="email" autocomplete="email" required class="form-input">
            </div>
            <div>
                <label for="password" class="form-label">パスワード</label>
                <input id="password" name="password" type="password" autocomplete="current-password" required class="form-input">
            </div>
            <div style="margin-top:1em;">
                <button type="submit" class="btn btn-primary w-full">ログインする</button>
            </div>
            <p id="error-message" class="text-red-400 text-center" style="display: none;"></p>
        </form>
    </div>

<script is:inline>
    const form = document.getElementById('login-form');
    const errorMessage = document.getElementById('error-message');

    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        errorMessage.style.display = 'none';

        // 'email' IDを持つ入力欄から、ユーザーのメールアドレスを取得
        const emailValue = (document.getElementById('email') as HTMLInputElement).value;
        const passwordValue = (document.getElementById('password') as HTMLInputElement).value;

        try {
            const response = await fetch('https://ai-verve.net/snspack/wp-json/simple-jwt-login/v1/auth', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                // ★★★【最後の修正】★★★
                // 提出する申請書の形式を、プラグインの仕様に完全に合致させる
                // 「email」という欄に、ユーザーが入力したメールアドレスを記載する
                body: JSON.stringify({ 
                    email: emailValue, 
                    password: passwordValue 
                }),
            });

            const data = await response.json();

            if (!response.ok || !data.success) {
                throw new Error(data.data.message || 'ログインに失敗しました。');
            }

            const token = data.data.jwt;
            if (!token) {
                throw new Error('認証トークンの取得に失敗しました。');
            }

            localStorage.setItem('jwt_token', token);
            
            // '/console/' の部分は、君のコンソールページのパスに合わせること
            window.location.href = '/console/'; 

        } catch (error) {
            errorMessage.textContent = error.message;
            errorMessage.style.display = 'block';
        }
    });
</script>
</BaseLayout>